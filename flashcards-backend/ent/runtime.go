// Code generated by entc, DO NOT EDIT.

package ent

import (
	"flashcards-backend/ent/schema"
	"flashcards-backend/ent/word"
	"time"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	wordFields := schema.Word{}.Fields()
	_ = wordFields
	// wordDescLangData is the schema descriptor for langData field.
	wordDescLangData := wordFields[0].Descriptor()
	// word.LangDataValidator is a validator for the "langData" field. It is called by the builders before save.
	word.LangDataValidator = func() func(string) error {
		validators := wordDescLangData.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(langData string) error {
			for _, fn := range fns {
				if err := fn(langData); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// wordDescWord1 is the schema descriptor for word1 field.
	wordDescWord1 := wordFields[1].Descriptor()
	// word.Word1Validator is a validator for the "word1" field. It is called by the builders before save.
	word.Word1Validator = func() func(string) error {
		validators := wordDescWord1.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(word1 string) error {
			for _, fn := range fns {
				if err := fn(word1); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// wordDescWord2 is the schema descriptor for word2 field.
	wordDescWord2 := wordFields[2].Descriptor()
	// word.Word2Validator is a validator for the "word2" field. It is called by the builders before save.
	word.Word2Validator = func() func(string) error {
		validators := wordDescWord2.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(word2 string) error {
			for _, fn := range fns {
				if err := fn(word2); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// wordDescCreatedAt is the schema descriptor for created_at field.
	wordDescCreatedAt := wordFields[3].Descriptor()
	// word.DefaultCreatedAt holds the default value on creation for the created_at field.
	word.DefaultCreatedAt = wordDescCreatedAt.Default.(func() time.Time)
}
