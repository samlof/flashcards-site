enum CardResult {
  Easy
  Good
  Bad
  Retry
}

type CardLog {
  createTime: Time!
  id: ID!
  word: Word!
  lastResult: CardResult!
}

type CardSchedule {
  createTime: Time!
  id: ID!
  word: Word!
  scheduledFor: Time!
}

type ScheduledWordsResponse {
  cards: [Word!]!
}

extend type Query {
  scheduledWords(shuffle: Boolean! = false): ScheduledWordsResponse!
}

input CardStatus {
  cardId: ID!
  result: CardResult!
}

extend type Mutation {
  cardStatus(input: CardStatus!): CardLog!
}
