name: Backend CI
on:
  push:
    paths:
      - "flashcards-backend/**.go"
    branches:
      - "master"
  pull_request:
    paths:
      - "flashcards-backend/**.go"

jobs:
  lint:
    name: Run golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          working-directory: flashcards-backend
          args: --skip-dirs=^ent,generated

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: flashcards-backend
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.15"
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run tests
        run: go test -race ./...

  generate:
    name: Check if generate has been ran
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: flashcards-backend
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run go generate
        run: go generate ./...
      - name: Check generated files
        run: |
          status=$(git status --porcelain)
          if [ -n "$status" ]; then
            echo "you need to run 'go generate ./...' and commit the changes"
            echo "$status"
            exit 1
          fi
